apiVersion: v1
kind: ServiceAccount
metadata:
  name: container-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: container-service-role
rules:
  - apiGroups: [""]
    resources:
      - pods
    verbs:
      - get
      - list
      - delete
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: container-service-role-binding
subjects:
  - kind: ServiceAccount
    name: container-service
roleRef:
  kind: Role
  name: container-service-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: container-service-container
spec:
  selector:
    matchLabels:
      app: container-service
  template:
    metadata:
      labels:
        app: container-service
    spec:
      serviceAccount: container-service
      containers:
      - name: container-service
        image: pitboss:container-service-latest
        ports:
        - containerPort: 80
        volumeMounts:
          - name: configuration
            mountPath: /app/configuration
            readOnly: true
          - name: scripts
            mountPath: /app/scripts
            readOnly: true
        env:
          - name: PITBOSS_CONFIGURATION
            value: "/app/configuration/configuration.json"
          - name: PITBOSS_IMPLEMENTATION
            value: KUBERNETES
      volumes:
        - name: configuration
          secret:
            secretName: pitboss-configuration
        - name: scripts
          hostPath:
              path: /Projects/PitBoss/scripts
---
apiVersion: v1
kind: Service
metadata:
  name: container-service-service
spec:
  selector:
    app: container-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80