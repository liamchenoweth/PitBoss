// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PitBoss;

namespace PitBoss.Migrations
{
    [DbContext(typeof(BossContext))]
    [Migration("20200405131548_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("PitBoss.OperationRequest", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CallbackUri")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Completed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("PipelineId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PipelineName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PipelineStepId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Started")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OperationRequests");
                });

            modelBuilder.Entity("PitBoss.OperationResponse", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("PipelineId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PipelineName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PipelineStepId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Result")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Success")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("OperationResponses");
                });

            modelBuilder.Entity("PitBoss.PipelineRequest", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("CurrentRequestId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Input")
                        .HasColumnType("TEXT");

                    b.Property<string>("PipelineName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResponseId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CurrentRequestId");

                    b.HasIndex("ResponseId");

                    b.ToTable("PipelineRequests");
                });

            modelBuilder.Entity("PitBoss.PipelineRequest", b =>
                {
                    b.HasOne("PitBoss.OperationRequest", "CurrentRequest")
                        .WithMany()
                        .HasForeignKey("CurrentRequestId");

                    b.HasOne("PitBoss.OperationResponse", "Response")
                        .WithMany()
                        .HasForeignKey("ResponseId");
                });
#pragma warning restore 612, 618
        }
    }
}
